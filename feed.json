{
    "version": "https://jsonfeed.org/version/1",
    "title": "Clark Cui",
    "home_page_url": "https://clark-cui.top/",
    "feed_url": "https://clark-cui.top/feed.json",
    "description": "Clark Cui' Blog",
    "icon": "https://clark-cui.top/horse.svg",
    "author": {
        "name": "Clark Cui",
        "url": "https://clark-cui.top"
    },
    "items": [
        {
            "content_html": "<h1>python 中的一些语法糖释义</h1>\n<h3>with 关键字</h3>\n<blockquote>\n<p>Python 中的  with  关键字用于异常处理，它封装了  try…except…finally  编码范式，提高了易用性，使代码更清晰可读。</p>\n</blockquote>\n<p>如果不使用不使用 with，也不使用 try…except…finally</p>\n<pre><code class=\"language-python\">file = open('./test_runoob.txt', 'w')\nfile.write('hello world !')\nfile.close()\n</code></pre>\n<p>如果使用 try…except…finally</p>\n<pre><code class=\"language-python\">file = open('./test_runoob.txt', 'w')\ntry:\n    file.write('hello world')\nfinally:\n    file.close()\n</code></pre>\n<p>使用 with 关键字</p>\n<pre><code class=\"language-python\">with open('./test_runoob.txt', 'w') as file:\n    file.write('hello world !')\n</code></pre>\n",
            "url": "https://clark-cui.top/posts/python 中的一些语法糖释义.html",
            "title": "python 中的一些语法糖释义",
            "date_modified": "2024-02-20T00:00:00.000Z",
            "author": {
                "name": "Clark Cui",
                "url": "https://clark-cui.top"
            }
        },
        {
            "content_html": "<h1>爬虫核心</h1>\n<h3>1. HTTP 协议</h3>\n<blockquote>\n<p>爬虫就是模拟浏览器去服务器获取数据过程的程序</p>\n</blockquote>\n<ul>\n<li>\n<p><strong>请求首行</strong></p>\n<p><em>(POST /api/v1/auth/password/login?password=123 HTTP/1.1)</em></p>\n<p><u>请求方法+请求路径+query 参数+http 协议版本</u></p>\n</li>\n<li>\n<p><strong>请求头</strong></p>\n<p><em>（Content-Type: application/json\\r\\nUser-Agent: xxx...）</em></p>\n</li>\n<li>\n<p><strong>请求体</strong></p>\n<p><em>(空行之后的数据)</em></p>\n</li>\n<li>\n<p><strong>响应首行</strong></p>\n<p><em>(HTTP1.1 200 ok)</em></p>\n<p><u>http 协议版本+响应状态码+状态信息</u></p>\n</li>\n<li>\n<p><strong>响应头</strong></p>\n<p><em>（同请求头）</em></p>\n</li>\n<li>\n<p><strong>响应体</strong></p>\n<p><em>(空行之后的数据)</em></p>\n</li>\n</ul>\n<h3>2. 反反爬策略</h3>\n<blockquote>\n<p>常见的反爬策略是通过区分请求头来鉴别爬虫程序和浏览器正常访问的</p>\n</blockquote>\n<ul>\n<li>\n<p><strong>补 User-Agent</strong></p>\n</li>\n<li>\n<p><strong>补 Referer</strong></p>\n<p><em>(防盗链通常校验这个值)</em></p>\n</li>\n<li>\n<p><strong>补 Cookie</strong></p>\n<p><em>(需要登陆的网站通常需要校验 Cookie)</em></p>\n</li>\n<li>\n<p><strong>补加密参数</strong></p>\n<p><em>(一些网站会把请求参数做某种加密，在服务端进行解密验证，我们需要逆向出对应的加密方式，并进行模拟)</em></p>\n</li>\n</ul>\n<h3>3. 常见加密方式</h3>\n<blockquote>\n<p>常见的加密方式有 base64 转码、md5 摘要、aes 对称加密等</p>\n</blockquote>\n<ul>\n<li>\n<p><strong>base64 转码</strong></p>\n<p><em>base64 包括的字符有大写字母 A-Z、小写字母 a-z、数字 0-9、符号 &quot;+&quot;、&quot;/&quot;（再加上作为垫字的 &quot;=&quot;，实际上是 65 个字符)</em></p>\n</li>\n<li>\n<p><strong>md5 摘要</strong></p>\n<p><em>md5 全称 Message Digest Algorithmn，是一种被广泛使用的密码散列函数，可以产生出一个 128 bit 的散列值（hash value），用于确保信息传输完整一致。md5 常见的分为取 16 位和取 32 位两种格式</em></p>\n</li>\n<li>\n<p><strong>aes 对称加密</strong></p>\n</li>\n</ul>\n",
            "url": "https://clark-cui.top/posts/爬虫核心.html",
            "title": "爬虫核心",
            "date_modified": "2024-02-20T00:00:00.000Z",
            "author": {
                "name": "Clark Cui",
                "url": "https://clark-cui.top"
            }
        },
        {
            "content_html": "<h1>测试一下呢呢</h1>\n<p>测试测试</p>\n<pre><code class=\"language-javascript\">console.log('test test')\n</code></pre>\n",
            "url": "https://clark-cui.top/posts/作为测试文章.html",
            "title": "测试文章",
            "summary": "测试测试",
            "date_modified": "2024-02-15T00:00:00.000Z",
            "author": {
                "name": "Clark Cui",
                "url": "https://clark-cui.top"
            }
        }
    ]
}